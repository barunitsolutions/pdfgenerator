var PdfPrinter = require('pdfmake');
var fs = require('fs');
var fItem = require('./fieldItem.js')
var sItem = require('./sectionItem.js')
var lPhotoMatrix = require('./leftPhotoMatrix.js')
var rPhotoMatrix = require('./rightPhotoMatrix.js')
var formHeader = require('./formHeader.js')
var thumImpression = require('./thumbImpression.js')
// Define font files
var fonts = {
  // Roboto: {
  //     normal: 'fonts/Roboto-Regular.ttf',
  //     bold: 'fonts/Roboto-Medium.ttf',
  //     italics: 'fonts/Roboto-Italic.ttf',
  //     bolditalics: 'fonts/Roboto-MediumItalic.ttf'
  // },
  Fontello: {
    normal: 'fonts/fontello/font/fontello.ttf',
    bold: 'fonts/fontello/font/fontello.ttf',
    italics: 'fonts/fontello/font/fontello.ttf',
    bolditalics: 'fonts/fontello/font/fontello.ttf'
  },
  Baskerville: {
    bold: 'fonts/LibreBaskerville-Bold.ttf',
    italics: 'fonts/LibreBaskerville-Italic.ttf',
    normal: 'fonts/LibreBaskerville-Regular.ttf'
  },
  OpenSans: {
    normal: 'fonts/OpenSans-Regular.ttf',
    bold: 'fonts/OpenSans-Bold.ttf',
    italics: 'fonts/OpenSans-Italic.ttf',
    bolditalics: 'fonts/OpenSans-BoldItalic.ttf'
  },
  Courier: {
    normal: 'Courier',
    bold: 'Courier-Bold',
    italics: 'Courier-Oblique',
    bolditalics: 'Courier-BoldOblique'
  },
  Helvetica: {
    normal: 'Helvetica',
    bold: 'Helvetica-Bold',
    italics: 'Helvetica-Oblique',
    bolditalics: 'Helvetica-BoldOblique'
  },
  Times: {
    normal: 'Times-Roman',
    bold: 'Times-Bold',
    italics: 'Times-Italic',
    bolditalics: 'Times-BoldItalic'
  },
  Symbol: {
    normal: 'Symbol'
  },
  ZapfDingbats: {
    normal: 'ZapfDingbats'
  }
};

function createPANForm(firstname, middlename, lastname, fileName) {
  this.fileName = fileName;
  this.firstname = firstname.toUpperCase();
  this.middlename = middlename.toUpperCase();
  this.lastname = lastname.toUpperCase();

  var printer = new PdfPrinter(fonts);

  var docDefinition = {
    defaultStyle: {
      font: 'OpenSans',
      alignment: 'justify',
      fontSize: 12
    },
    footer: function(currentPage, pageCount) { return { columns :[ {text:'Generated by Shri Thangamyil Multi-Service Consultancy',style:'footer'}, {text:currentPage.toString() + ' of ' + pageCount, alignment:'right', style:'footer'} ]}},
    pageSize: 'A4',
    pageMargins: [30, 30, 30, 30],
    styles: {
      header: {
        fontSize: 8,
        bold: true,
        alignment: 'justify',
        margin: [0, 0, 0, 10]
      },
      footer : {
        fontSize : 6,
        margin: [30, 0, 30, 0],
        font: 'Helvetica'
      },
      label: {
        fontSize: 8,
        // bold: true,
        margin: [10, 0, 20, 10]
      },
      sectionHeader: {
        fontSize: 8,
        bold: true,
        margin: [0, 0, 10, 10],
        font: 'Helvetica',
        // background : 'gray'
      },
      icon: {
        font: 'Fontello',

      }
    },
    content: [{
      columns: [
        { width: 100, table: new lPhotoMatrix() },
        {
          width: '*',
          margin: [10, 0, 10, 10],
          layout: 'noBorders',
          table: new formHeader(),

          style: 'header',
          alignment: 'center'
        },
        { width: 100, table: new rPhotoMatrix() }
      ]
    }, {

      columns: [
        {
          stack: [{ text: 'Sir,' },
          { text: 'I/We hereby request that a permanent account number to be alloted to me/us.' },
          { text: 'I/We give below necessary particulars:' },
          ], fontSize: 8, margin: [0, 30, 0, 0]
        },
        { width: 200, table: new thumImpression(), margin: [0, 0, 0, 10], }
      ]
    },

    // {columns : new sItem(1,'First Section',[{label:'First Name',value:'Bharani'}])},
    {
      columns: new sItem(1, 'Full Name (Full exapanded name to be mentioned as appearing in proof of identity/address documents : initals are not permitted)',
        [{
          label: [{ text: 'Please select title,  ' }, { text: '', style: 'icon' }, { text: ' as applicable', style: 'label' }],

          value: [{ text: 'Shri', checked: true }, { text: 'Smt.' }, { text: 'Kumari' }, { text: 'M/s' }], fieldType: 'checkbox'
        },

        { label: 'Last Name/Surname', value: 'Ganeshan', fieldType: 'table' },
        { label: 'First Name', value: 'Bharanidharan', fieldType: 'table' },
        { label: 'Middle Name', value: '', fieldType: 'table' },
        ]
      )
    },
    {
      columns: new sItem(2, 'Abbreviations of the above name, as you would like it, to be printed on the PAN card',
        [{ label: '', value: 'Bharanidharan Ganeshan', fieldType: 'noLabel' },
        { label: '', value: '', fieldType: 'noLabel' },
          // {label:'Middle Name',value:'',fieldType: 'table'},
        ]
      )
    },

    {
      columns: new sItem(3, 'Have you ever been known by any other name?',
        [{
          label: 'If yes please give that other name,',
          value: [{ text: 'Yes'}, { text: 'No', checked:true }], 
          fieldType: 'checkbox'
        },
        {
          label: [{ text: 'Please select title,  ' }, { text: '', style: 'icon' }, { text: ' as applicable', style: 'label' }],

          value: [{ text: 'Shri' }, { text: 'Smt.' }, { text: 'Kumari' }, { text: 'M/s' }], fieldType: 'checkbox'
        },

        { label: 'Last Name/Surname', value: '  ', fieldType: 'table' },
        { label: 'First Name', value: ' ', fieldType: 'table' },
        { label: 'Middle Name', value: ' ', fieldType: 'table' },
        ])
    },
    {columns: new sItem(4,'Gender (for individual applicants only)',
    [{
      label: [{ text: 'Please select title,  ' }, { text: '', style: 'icon' }, { text: ' as applicable', style: 'label' }],

      value: [{ text: 'Male', checked: true }, { text: 'Female' }, { text: 'Transgender' }], fieldType: 'checkbox'
    }]
    )},
    {
      columns : new sItem(5,'Date of Birth/Incorporation/Agreement/Partnership or Trust Deed/Formation of Body of Individuals or Association of Persons',
      [{label:'Format in DD-MM-YYYY', value:'23-05-1990', fieldLength:10}])
    },
    {
      columns : new sItem(6,'Details of Parents (applicable only for individual applicants)',
      [{label:'Whether mother is a single parent and you wish to apply for PAN by furnishing the name of your mother only?'},
      {
        label: [{ text: 'Please select,  ' }, { text: '', style: 'icon' }, { text: ' as applicable', style: 'label' }],
  
        value: [{ text: 'Yes'  }, { text: 'No', checked:true }], fieldType: 'checkbox'
      },
      {label:'lf yes, please fill in mother\'s name in the appropriate space provide below'}
      ])
    },
    {
      columns: new sItem('', 'Father\'s Name (Mandatory except where mother is a single parent and PAN is applied by furnishing the name of mother only)',
        [
        { label: 'Last Name/Surname', value: ' ', fieldType: 'table' },
        { label: 'First Name', value: ' ', fieldType: 'table' },
        { label: 'Middle Name', value: ' ', fieldType: 'table' },
        ]
      )
    },
    {text: '  '},
    {
      columns: new sItem('', 'Mother\'s Name (optional except where mother is a single parent and PAN is applied by furnishing the name of mother only)',
        [
        { label: 'Last Name/Surname', value: ' ', fieldType: 'table' },
        { label: 'First Name', value: ' ', fieldType: 'table' },
        { label: 'Middle Name', value: ' ', fieldType: 'table' },
        {label:'Select the name of either father or mother which you may like to be printed on PAN card (Select only one)'},
        {
          label: [{ text: 'Please select,  ' }, { text: '', style: 'icon' }, { text: ' as applicable', style: 'label' }],
    
          value: [{ text: ' Father\'s name' , checked:true }, { text: 'Mother\'s name'}], fieldType: 'checkbox'
        },
        {label:'(Incase no option is provided then PAN card will be issued with father\'s name except where mother is a single parent and you wish to apply for PAN by furnishing name of mother only )'},
        ]
      )
    },
    {
    columns : new sItem(7,'Address',[])
    },
    {
      columns : new sItem('','Residence',[
        { label: 'Flat / Room / Door / Block No.', value: '', fieldType: 'table' },
        { label: 'Name of Premises / Building / Village', value: '', fieldType: 'table' },
        { label: 'Road / Street / Lane/Post Office', value: '', fieldType: 'table' },
        { label: 'Area / Locality / Taluka/ Sub- Division', value: '', fieldType: 'table' },
        { label: 'Town/City/District', value: '', fieldType: 'table' },
        { label: 'State/ Union Territory', value: '', fieldType: 'table' },
        { label: 'PIN Code/ZIP Code', value: '', fieldType: 'table' },
        { label: 'Country Name', value: '', fieldType: 'table' },


      ])
    },
    {
      columns : new sItem('','Office',[
        { label: 'Name of Office', value: '', fieldType: 'table' },
        { label: 'Flat / Room / Door / Block No.', value: '', fieldType: 'table' },
        { label: 'Name of Premises / Building / Village', value: '', fieldType: 'table' },
        { label: 'Road / Street / Lane/Post Office', value: '', fieldType: 'table' },
        { label: 'Area / Locality / Taluka/ Sub- Division', value: '', fieldType: 'table' },
        { label: 'Town/City/District', value: '', fieldType: 'table' },
        { label: 'State/ Union Territory', value: '', fieldType: 'table' },
        { label: 'PIN Code/ZIP Code', value: '', fieldType: 'table' },
        { label: 'Country Name', value: '', fieldType: 'table' },


      ])
    },

    {
      columns : new sItem(8,'Address for Communication',[
        {
          label: [{ text: 'Please select,  ' }, { text: '', style: 'icon' }, { text: ' as applicable', style: 'label' }],
    
          value: [{ text: ' Residence' , checked:true }, { text: 'Office'}], fieldType: 'checkbox'
        }
      ])
    },

    {
      columns : new sItem(9,'Telephone number & Email address details',[
        {
          label: 'Telephone Number',
          value: '',
          fieldLength : 10
        },
        {
          label: 'Email Id',
          value: 'gbharani5@hotmail.com',
          // fieldLength : 10
        }
      ])
    },
    {text: '  '},
    {text: '  '},
    {text: '  '},
    {text: '  '},

    {columns : new sItem(10,'Status of Applicant',[
      {
        label: [{ text: 'Please select,  ' }, { text: '', style: 'icon' }, { text: ' as applicable', style: 'label' }],
      },
      {
        label:'',
        fieldLabelWidth : 1,
        value: [
          { text: 'Individual' , checked:true }, 
          { text: 'Hindu undivided family'},
          { text: 'Company'},
          { text: 'Partnership Firm'},
        ], 
          fieldType: 'checkbox'

      },     
      {
        label:'',
        fieldLabelWidth : 1,
        value: [
          { text: 'Association of Persons'},
          { text: 'Trusts'},
          { text: 'Body of Individuals'},
          { text: 'Local Authority'},
        ], 
          fieldType: 'checkbox'

      },
      {
        label:'',
        fieldLabelWidth : 1,
        value: [
          { text: 'Artificial Judicial Persons'},
          { text: 'Limited Liability Partnership'},
          { text: 'Government'},
          { text: ''},
        ], 
          fieldType: 'checkbox'

      }
    ])},

    {columns: new sItem(11,'Registration Number (for company, firms, LLPs etc.)', [
      { label: '', value: '', fieldType: 'noLabel'}
    ])},

    {columns: new sItem(12,' ln case of a person, who is required to quote Aadhaar number or the Enrolment lD of Aadhaar application form as per   \n section 139 AA', [
      { label: 'Please mention your AADHAAR \n number (if allotted)', value: '', fieldLength: 12},
      { label: 'lf AADHAAR number is \n not allotted, mention the \n enrolment ID of Aadhaar \n application form', value: '', fieldLength: 25},
      { label: 'Name as per AADHAAR letter or \n card or as per the \n Enrolment ID of Aadhaar \n application form', value: '', fieldLength: 25},

    ])},

    {columns : new sItem(13,'Source of Income', [
      {
        label: [{ text: 'Please select,  ' }, { text: '', style: 'icon' }, { text: ' as applicable', style: 'label' }],
      },
      {
        label:'',
        fieldLabelWidth : 1,
        value: [
          { text: 'Salary'},
          { text: 'Income from Business/Profession'},
          { text: 'Income from House Property'},
        ], 
          fieldType: 'checkbox'

      },
      {
        label:'',
        fieldLabelWidth : 1,
        value: [
          { text: 'Capital Gains'},
          { text: 'Income from Other Sources'},
          { text: 'No Income'},
        ], 
          fieldType: 'checkbox'

      },
      { label: 'Business/Profession Code \n For Code: Refer Instructions', value: '', fieldLength: 2}


    ])},

    {columns : new sItem(14,'Representative Assessee (RA)',[
      {label: 'Full name, address of the Representative Assessee, who is assessible under the lncome Tax Act in respect of the person, whose particulars have been given in the column 1-13.'}
    ])},
    {columns: new sItem('','Full Name (Full expanded name : initials are not permitted)',[

      {
        label: [{ text: 'Please select title,  ' }, { text: '', style: 'icon' }, { text: ' as applicable', style: 'label' }],

        value: [{ text: 'Shri', checked: true }, { text: 'Smt.' }, { text: 'Kumari' }, { text: 'M/s' }], fieldType: 'checkbox'
      },

      { label: 'Last Name/Surname', value: 'Ganeshan', fieldType: 'table' },
      { label: 'First Name', value: 'Bharanidharan', fieldType: 'table' },
      { label: 'Middle Name', value: '', fieldType: 'table' },

    ])},
    {
      columns : new sItem('','Address',[
        { label: 'Flat / Room / Door / Block No.', value: '', fieldType: 'table' },
        { label: 'Name of Premises / Building / Village', value: '', fieldType: 'table' },
        { label: 'Road / Street / Lane/Post Office', value: '', fieldType: 'table' },
        { label: 'Area / Locality / Taluka/ Sub- Division', value: '', fieldType: 'table' },
        { label: 'Town/City/District', value: '', fieldType: 'table' },
        { label: 'State/ Union Territory', value: '', fieldType: 'table' },
        { label: 'PIN Code/ZIP Code', value: '', fieldType: 'table' },
        { label: 'Country Name', value: '', fieldType: 'table' },


      ])
    },
{text:' '},
    {columns: new sItem(15, 'Documents submitted as Proof of ldentity (POl), Proof of Address (POA) and Proof of Date of Birth (POB)',[

      {label:'I/We have enclosed,'},
      {label: 'Driving Liscence',value:'as proof of Identity and', fieldType: 'placeHolder'},
      {label: 'Aadhar Card',value:'as proof of Address and' , fieldType: 'placeHolder'},
      {label: 'Birth Certificate',value:'as proof of Date of Birth', fieldType: 'placeHolder'},


    ])},

    {columns: new sItem(16, 'I/We ',[
      {label:'the applicant, in the capacity of'},
      {label:'do hereby declare that what is stated above is true to the best of my/our information and belief.'},


    ])},

    {columns : [
      new sItem('','',[{label : 'Place' , fieldLabelWidth:50, value : '' , fieldLength: 15},
    {label : 'Date' , fieldLabelWidth:50, value : '' , fieldLength: 10}]), 
    { width: 200, table: new thumImpression(), margin: [0, 0, 0, 10], } ]
  }

    ],


  };

  var options = {
    // ...
  }

  var pdfDoc = printer.createPdfKitDocument(docDefinition, options);
  pdfDoc.pipe(fs.createWriteStream(fileName));
  pdfDoc.end();
}
createPANForm('Bharani', '', 'Ganeshan', 'documents/sample2.pdf');

// console.log(new fItem(50,'First Name',40,[0,0,0,5],'Bharanidharan'));